// Code generated by protoc-gen-go. DO NOT EDIT.
// source: util.proto

package nano_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// * Check if the supplied address is correct
type ReqAddressValid struct {
	// * Address to check, such as xrb_... and nano_...
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAddressValid) Reset()         { *m = ReqAddressValid{} }
func (m *ReqAddressValid) String() string { return proto.CompactTextString(m) }
func (*ReqAddressValid) ProtoMessage()    {}
func (*ReqAddressValid) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_4b4acf9be5f3e64e, []int{0}
}
func (m *ReqAddressValid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAddressValid.Unmarshal(m, b)
}
func (m *ReqAddressValid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAddressValid.Marshal(b, m, deterministic)
}
func (dst *ReqAddressValid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAddressValid.Merge(dst, src)
}
func (m *ReqAddressValid) XXX_Size() int {
	return xxx_messageInfo_ReqAddressValid.Size(m)
}
func (m *ReqAddressValid) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAddressValid.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAddressValid proto.InternalMessageInfo

func (m *ReqAddressValid) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// * Result of address validation
type ResAddressValid struct {
	// * True if the address is valid
	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// * The reason the address is invalid. May be empty.
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResAddressValid) Reset()         { *m = ResAddressValid{} }
func (m *ResAddressValid) String() string { return proto.CompactTextString(m) }
func (*ResAddressValid) ProtoMessage()    {}
func (*ResAddressValid) Descriptor() ([]byte, []int) {
	return fileDescriptor_util_4b4acf9be5f3e64e, []int{1}
}
func (m *ResAddressValid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResAddressValid.Unmarshal(m, b)
}
func (m *ResAddressValid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResAddressValid.Marshal(b, m, deterministic)
}
func (dst *ResAddressValid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResAddressValid.Merge(dst, src)
}
func (m *ResAddressValid) XXX_Size() int {
	return xxx_messageInfo_ResAddressValid.Size(m)
}
func (m *ResAddressValid) XXX_DiscardUnknown() {
	xxx_messageInfo_ResAddressValid.DiscardUnknown(m)
}

var xxx_messageInfo_ResAddressValid proto.InternalMessageInfo

func (m *ResAddressValid) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ResAddressValid) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqAddressValid)(nil), "nano.api.req_address_valid")
	proto.RegisterType((*ResAddressValid)(nil), "nano.api.res_address_valid")
}

func init() { proto.RegisterFile("util.proto", fileDescriptor_util_4b4acf9be5f3e64e) }

var fileDescriptor_util_4b4acf9be5f3e64e = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0xc9, 0xcc,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc8, 0x4b, 0xcc, 0xcb, 0xd7, 0x4b, 0x2c, 0xc8,
	0x54, 0xd2, 0xe5, 0x12, 0x2c, 0x4a, 0x2d, 0x8c, 0x4f, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x8e,
	0x2f, 0x4b, 0xcc, 0xc9, 0x4c, 0x11, 0x92, 0xe0, 0x62, 0x87, 0x0a, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0xc1, 0xb8, 0x4a, 0x8e, 0x20, 0xe5, 0xc5, 0x68, 0xca, 0x45, 0xb8, 0x58, 0xc1, 0x0c,
	0xb0, 0x62, 0x8e, 0x20, 0x08, 0x47, 0x48, 0x8c, 0x8b, 0xad, 0x28, 0x35, 0xb1, 0x38, 0x3f, 0x4f,
	0x82, 0x09, 0x6c, 0x06, 0x94, 0x97, 0xc4, 0x06, 0x76, 0x82, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x98, 0x99, 0xd5, 0x73, 0x90, 0x00, 0x00, 0x00,
}
